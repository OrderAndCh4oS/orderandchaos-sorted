{"version":3,"sources":["../../src/index.ts","App.tsx","index.tsx"],"names":["isAsc","aValue","a","bValue","b","nameA","nameB","result","aStr","String","bStr","arr","name","value","misc","undefined","buttonStyle","width","height","display","borderRadius","App","useState","dataArr","setDataArr","Object","obj","makeSortColumns","sortColumns","setSortColumns","sortColumn","sortedOils","sort","sortOnColumn","sortBy","prevState","columnClass","styles","col12","className","table_alternatingRows","bc_black","style","onClick","map","o","ReactDOM","render","document","getElementById"],"mappings":"kRAIqB,cACjB,YADoCA,WAAiB,GAC9C,cACH,MACMC,EAASC,EAAf,GACMC,EAASC,EAAf,GACA,GAAsB,kBAAXH,GAAX,kBAAyCE,EAAqB,CAC1D,IAAIE,EAAQJ,EAAZ,cACIK,EAAQH,EAAZ,cACAI,EAASF,OAAqBA,MAA9BE,OACG,GAAsB,kBAAXN,GAAX,kBAAyCE,EAC5CI,EAASN,OAAuBA,MAAhCM,MACG,CACH,IAAMC,EAAOC,UAAb,cACMC,EAAOD,UAAb,cACAF,EAASC,OAAmBA,MAA5BD,EAGJ,OAAOP,EAAQO,GAAf,ICVFI,EAAc,CAClB,CAAEC,KAAM,IAAKC,MAAO,EAAGC,KAAM,MAC7B,CAAEF,KAAM,IAAKC,MAAO,EAAGC,UAAMC,GAC7B,CAAEH,KAAM,IAAKC,MAAO,EAAGC,KAAM,GAC7B,CAAEF,KAAM,IAAKC,MAAO,EAAGC,KAAM,KAGzBE,EAAc,CAClBC,MAAO,OACPC,OAAQ,OACRC,QAAS,QACTC,aAAc,KA6DDC,EA1DH,WAAO,IAAD,EACcC,mBAAiBX,GAD/B,mBACTY,EADS,KACAC,EADA,OAEsBF,mBDFT,YAE3B,IADA,IAAMf,EAAN,GACA,MAAkBkB,YAAYC,EAA9B,mBAAuC,CACnCnB,EADU,EAAT,KACDA,EAEJ,SCHiEoB,CAAgBhB,IAFnE,mBAETiB,EAFS,KAEIC,EAFJ,KASVC,EAAa,SAAClB,GAAD,OAAsB,WACnB,OAAhBgB,KANS,SAAChB,EAAkBZ,GAChC,IAAM+B,EAAaR,EAAQS,KAAKC,EAAmBrB,EAAMZ,IACzDwB,EAAW,YAAIO,IAKfG,CAAOtB,EAAMgB,EAAYhB,IACzBiB,GAAe,SAACM,GAAD,mBAAC,eACXA,GADU,kBAEZvB,GAAQuB,EAAUvB,WAIvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQwB,YAAaC,IAAOC,OAC1B,2BAAOC,UAAS,UAAKF,IAAOG,wBAC1B,+BACA,4BACE,wBAAID,UAAWF,IAAOI,UACpB,4BAAQC,MAAO1B,EAAa2B,QAASb,EAAW,SAAhD,SAIF,wBAAIS,UAAWF,IAAOI,UACpB,4BAAQC,MAAO1B,EAAa2B,QAASb,EAAW,UAAhD,UAIF,wBAAIS,UAAWF,IAAOI,UACpB,4BAAQC,MAAO1B,EAAa2B,QAASb,EAAW,SAAhD,WAMJ,+BACCP,EAAQqB,KAAI,SAACC,GAAD,OACX,4BACE,4BAAKA,EAAEjC,MACP,4BAAKiC,EAAEhC,OACP,4BAAKJ,OAAOoC,EAAE/B,iBCpE9BgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.15208a17.chunk.js","sourcesContent":["export type ISortColumns<T> = {\n    [property in keyof T]: boolean;\n};\n\nconst sortOnColumn = <T>(name: keyof T, isAsc: boolean = true) => {\n    return (a: T, b: T) => {\n        let result;\n        const aValue = a[name];\n        const bValue = b[name];\n        if (typeof aValue === 'string' && typeof bValue === 'string') {\n            var nameA = aValue.toLowerCase();\n            var nameB = bValue.toLowerCase();\n            result = nameA < nameB ? -1 : nameA > nameB ? 1 : 0;\n        } else if (typeof aValue === 'number' && typeof bValue === 'number') {\n            result = aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n        } else {\n            const aStr = String(aValue).toLowerCase();\n            const bStr = String(bValue).toLowerCase();\n            result = aStr < bStr ? -1 : aStr > bStr ? 1 : 0;\n        }\n\n        return isAsc ? result : -result;\n    };\n};\n\nexport const makeSortColumns = <T>(obj: T[]): ISortColumns<T> => {\n    const result: any = {};\n    for (const key of Object.keys(obj[0])) {\n        result[key] = true;\n    }\n    return result as ISortColumns<T>;\n};\n\nexport default sortOnColumn;\n","import React, { useState } from \"react\";\n\nimport { Column, Container, Row, styles } from \"@orderandchaos/react-components-typescript\";\nimport sortOnColumn, { ISortColumns, makeSortColumns } from \"@orderandchaos/sorted\";\n\ninterface IObj {\n  name: string,\n  value: number,\n  misc: any\n}\n\nconst arr: IObj[] = [\n  { name: \"a\", value: 3, misc: null },\n  { name: \"b\", value: 2, misc: undefined },\n  { name: \"c\", value: 1, misc: 0 },\n  { name: \"d\", value: 0, misc: \"\" }\n];\n\nconst buttonStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  display: \"block\",\n  borderRadius: \"0\"\n};\n\nconst App = () => {\n  const [dataArr, setDataArr] = useState<IObj[]>(arr);\n  const [sortColumns, setSortColumns] = useState<ISortColumns<IObj>>(makeSortColumns(arr));\n\n  const sortBy = (name: keyof IObj, isAsc: boolean) => {\n    const sortedOils = dataArr.sort(sortOnColumn<IObj>(name, isAsc));\n    setDataArr([...sortedOils]);\n  };\n\n  const sortColumn = (name: keyof IObj) => () => {\n    if (sortColumns === null) return;\n    sortBy(name, sortColumns[name]);\n    setSortColumns((prevState: ISortColumns<IObj>) => ({\n      ...prevState,\n      [name]: !prevState[name]\n    }));\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Column columnClass={styles.col12}>\n          <table className={`${styles.table_alternatingRows}`}>\n            <thead>\n            <tr>\n              <th className={styles.bc_black}>\n                <button style={buttonStyle} onClick={sortColumn(\"name\")}>\n                  Name\n                </button>\n              </th>\n              <th className={styles.bc_black}>\n                <button style={buttonStyle} onClick={sortColumn(\"value\")}>\n                  Value\n                </button>\n              </th>\n              <th className={styles.bc_black}>\n                <button style={buttonStyle} onClick={sortColumn(\"misc\")}>\n                  Misc\n                </button>\n              </th>\n            </tr>\n            </thead>\n            <tbody>\n            {dataArr.map((o: IObj) =>\n              <tr>\n                <td>{o.name}</td>\n                <td>{o.value}</td>\n                <td>{String(o.misc)}</td>\n              </tr>\n            )}\n            </tbody>\n          </table>\n        </Column>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}